swagger:  "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version:      "0.2"
  title:        Key-Value Store
  description:  A key-value storage service.
  contact:
    name:       Test Dude
    email:      testdude@test.com
host:     kv-service:8080
# basePath prefixes all resource paths
basePath: /api/v1
x-healthPath: /health
x-usagePath: /metrics
#
tags:
  - name:         core
    description:  A core service
  - name:         storage
    description:  A storage service
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

x-init: create
x-info: info
x-update: update
x-gc: destroy

paths:

  /solution:
    x-swagger-router-controller: solution
    get:
      tags:
        - admin
      operationId:  listSolutions
      x-internal-use: true
      summary:      List Solutions
      description:  List all Solutions, this is an admin only operation
      responses:
        200:
          description: List of solutions successfully retrieved
          schema:
            description: List of solutions successfully retrieved
            type:   object
            properties:
              solutions:
                description:  List of solutions
                type:   array
                items:
                  description: Solution ID
                  type: string
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /solution/{solution_id}:
    x-swagger-router-controller: solution
    parameters:
      - name:         solution_id
        description:  The active solution ID automatically injected by Pegasus Dispatcher
        in:           path
        required:     true
        type:         string
        pattern:      ^[a-zA-Z0-9]+$
        x-internal-use: true
    get:
      tags:
        - admin
      operationId:  info
      summary:      Get namespace information
      description:  Returns namespace information including usage and quota
      responses:
        200:
          description: namespace information including usage and quota
          schema:
            $ref: "#/definitions/Solution"
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - admin
      operationId:  create
      x-internal-use: true
      summary:      Create solution
      description:  Create solution namespace
      parameters:
        - name:         solution
          in:           body
          description:  Solution info
          required:     true
          schema:
            $ref: "#/definitions/SolutionSettings"
      responses:
        204:
          description:  solution namespace created
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - admin
      operationId:  update
      x-internal-use: true
      summary:      Update solution
      description:  Update solution namespace
      parameters:
        - name:         solution
          in:           body
          description:  Solution info
          required:     true
          schema:
            $ref: "#/definitions/SolutionSettings"
      responses:
        204:
          description:  solution namespace updated
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - admin
      operationId:  destroy
      summary:      Remove a solution
      description:  Remove all related data of this solution
      x-internal-use: true
      responses:
        204:
          description:  solution namespace removed
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /solution/{solution_id}/key:
    x-swagger-router-controller: solution
    parameters:
      - name:         solution_id
        description:  The active solution ID automatically injected by Pegasus Dispatcher
        x-internal-use: true
        in:           path
        required:     true
        type:         string
        pattern:      ^[a-zA-Z0-9]+$
    get:
      tags:
        - storage
      operationId:  list
      summary:      Get namespace keys
      description:  Returns namespace keys
      x-example:    >
                    local result = Keystore.list()
                    print(result.keys)
      responses:
        200:
          description: namespace active keys
          schema:
            $ref: "#/definitions/SolutionKeys"
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - storage
      operationId:  clear
      summary:      Clear solution
      description:  Remove all keys from this solution. Be careful. There is no going back!
      x-example:    Keystore.clear()
      responses:
        204:
          description:  All solution keys removed
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /solution/{solution_id}/key/{key}:
    x-swagger-router-controller: solution
    parameters:
      - name:         solution_id
        description:  The active solution ID automatically injected by Pegasus Dispatcher
        x-internal-use: true
        in:           path
        required:     true
        type:         string
        pattern:      ^[a-zA-Z0-9]+$
      - name:         key
        in:           path
        description:  Key ID
        required:     true
        type:         string
        minLength:    1
        maxLength:    200
    get:
      tags:
        - storage
      operationId:  get
      summary:      Get a value
      description:  Returns the value of the given key
      x-example:    >
                    local result = Keystore.get({ key = "myKey" })
                    print(result.value)
      responses:
        200:
          description:  key value successfully retrieved
          schema:
            $ref:       "#/definitions/Response"
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - storage
      operationId:  set
      summary:      Set a value
      description:  Set or update a key value. If the key doesn't exist, this operation will increase your usage count.
      parameters:
        - name:         body
          in:           body
          description:  Value to set
          required:     true
          schema:
            $ref: "#/definitions/Value"
      x-example:    Keystore.set({ key = "myKey", value = "myValue" })
      responses:
        204:
          description:  key successfully set
        403:
          description:  >
                        Namespace, Key count quota reached. Delete some unused keys or contact Murano team for upgrading your plan.
                        You can view your current namespace usage with the _list_ operation or on your Murano portal account.
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - storage
      operationId:  delete
      summary:      Delete key
      description:  Remove a key value from the store. This operation frees a quota count for your namespace.
      x-example:    Keystore.delete({ key = "myKey" })
      responses:
        204:
          description:  key successfully deleted
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /solution/{solution_id}/command/{command}/{key}:
    x-swagger-router-controller: solution
    parameters:
      - name:         solution_id
        description:  The active solution ID automatically injected by Pegasus Dispatcher
        x-internal-use: true
        in:           path
        required:     true
        type:         string
        pattern:      ^[a-zA-Z0-9]+$
      - name:         key
        in:           path
        description:  Target key
        required:     true
        type:         string
        minLength:    1
        maxLength:    200
      - name:         command
        in:           path
        # Note: 'geoadd' currenlty only support one element per call. when update to redis 3.2.0+
        description:  >
                      This function offers some popular Redis commands to execute on the key.
                      Please refer to <a href="http://redis.io/commands">http://redis.io/commands documentation page</a> for the command information and parameters.
        required:     true
        type:         string
        enum:         [
                        get, set, del, setnx, strlen, type, exists, append, bitcount, bitpos, getbit, setbit, getrange, incr, incrby, decr, decrby, getset, incrbyfloat,
                        lpush, lpushx, lindex, llen, linsert, lrange, lrem, lset, ltrim, lpop, rpop, rpush, rpushx,
                        sadd, srem, scard, smembers, sismember, srandmember, spop,
                        setex, psetex, expire, pexpireat, pexpire, expireat, pttl, ttl, persist,
                        zadd, zcard, zcount, zincrby, zlexcount, zrange, zrangebylex, zrangebyscore, zrank, zrem, zremrangebylex, zremrangebyscore, zremrangebyrank, zrevrange, zrevrangebylex, zrevrangebyscore, zrevrank, zscore,
                        hdel, hexists, hget, hgetall, hincrby, hincrbyfloat, hkeys, hlen, hmget, hstrlen, hvals, hscan, hset, hmset, hsetnx
                      ]
        # , geoadd, geohash, geodist, geopos, georadius, bitfield when update to redis 3.2.0+

    post:
      tags:
        - storage
      operationId:      command
      summary:          Execute a Redis command
      description:      >
                        This function offers some popular Redis commands to execute on the key. Please refer to <a href="http://redis.io/commands">http://redis.io/commands documentation page</a> for the command information and parameters.
                        Remember, some commands will increase your namespace usage and may hit your namespace quota.
                        Not all Redis commands are supported. Please refer to the command parameter information.
      x-example:        >
                        -- Add a string to a list

                        result = Keystore.command({
                          key = "myList",
                          command = "lpush",
                          args = {"oneItem"}
                        })

                        -- Retrieve the list content

                        result = Keystore.command({
                          key = "myList",
                          command = "lrange",
                          args = {0, -1}
                        })
      parameters:
        - name:         body
          in:           body
          description:  Command Value
          required:     true
          schema:
            $ref:       "#/definitions/Command"
      responses:
        200:
          description:  command successfully executed
          schema:
            $ref:       "#/definitions/Response"
        403:
          description:  >
                        Namespace, Key count quota reached. Delete some un-used keys or contact Murano team for upgrading your plan.
                        You can view your current namespace usage with the _list_ operation or on your Murano portal account.
        default:
          description:  error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
  /swagger.json:
    x-swagger-pipe: swagger_raw

################################################################################
#                                 Definitions                                  #
################################################################################

definitions:
  Response:
    type:             object
    description:      The response object containing the key value.
    properties:
      value:
        type:         [array, object, string, number, boolean, "null"]
        description:  Value data
    required:   [value]

  Value:
    type:             object
    description:      The operation call containing the value to set.
    properties:
      value:
        type:         [string, number, boolean, "null"]
        description:  Value data
    required:   [value]

  Command:
    type:             object
    description:      Command operation parameters.
    properties:
      args:
        type:         array
        description:  List of arguments for the specified command. Please refer to <a href="http://redis.io/commands">http://redis.io/commands documentation page</a> for the command information and parameters.
        items:
          type:       [string, number, boolean]
          description: Command argument value

  SolutionKeys:
    type:             object
    description:      Solution namespace information
    properties:
      quota:
        description:  Usage limitation applying to this service. WARNING! This property is deprecated and will be removed in a future version. Use the *info* operation instead to get this value.
        type:         object
        properties:
          keys:
            type:         integer
            description:  Maximum number of keys allowed for this solution depending on your Murano plan. Contact Murano team for more information.
      usage:
        description:  Namespace usage. WARNING! This property is deprecated and will be removed in a future version. Use the *info* operation instead to get this value.
        type:         object
        properties:
          keys:
            type:         integer
            description:  Current number of keys being used by the solution namespace.
      keys:
        type:         array
        description:  Active namespace keys
        items:
          type:         string
          description:  Key

  Solution:
    type:             object
    description:      Solution namespace information
    properties:
      quota:
        description:  Usage limitation applying to this service
        type:         object
        properties:
          keys:
            type:         integer
            description:  Maximum number of keys allowed for this solution depending on your Murano plan. Contact Murano team for more information.
      usage:
        description:  Namespace usage
        type:         object
        properties:
          keys:
            type:         integer
            description:  Current number of keys being used by the solution namespace.
          size:
            type:         integer
            description:  Total data size of solution namespace in bytes.

  SolutionSettings:
    type:       object
    description:  Solution namespace settings
    properties:
      quota:
        description:  Usage limitation applying to this service
        type:         object
        properties:
          keys:
            type:         integer
            description:  Maximum number of keys allowed for this solution depending on your Murano plan. Contact Murano team for more information.

  ErrorResponse:
    type: object
    description: Error response
    properties:
      message:
        type: string
        description: Error message
      code:
        type: string
        description: Error code
      error:
        type: [object, string]
        description: Error details
